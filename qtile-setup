#!/bin/bash

#Designed to be used with Archinstall with the xorg profile option

# set some colors
CNT="[\e[1;36mNOTE\e[0m]"
COK="[\e[1;32mOK\e[0m]"
CER="[\e[1;31mERROR\e[0m]"
CAT="[\e[1;37mATTENTION\e[0m]"
CWR="[\e[1;35mWARNING\e[0m]"
CAC="[\e[1;33mACTION\e[0m]"
INSTLOG="install.log"

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# locations
SCRIPTS=$HOME/.scripts
WALLPAPER=$HOME/.wallpaper

#clear the screen
clear

#### Check for paru ####
ISPARU=/sbin/paru
if [ -f "$ISPARU" ]; then 
    echo -e "$COK - paru was located, moving on."
else 
    echo -e "$CWR - paru was NOT located"
    git clone https://aur.archlinux.org/paru-bin.git &>> $INSTLOG
    cd paru-bin
    makepkg -si --noconfirm &>> ../$INSTLOG
    cd ..
    rm -rf paru-bin &>> ../$INSTLOG
fi

# function that will test for a package and if not found it will attempt to install it
# $1 - pacman paru or yay
# $2 - software
install_software() {
    case $1 in
        pacman)
            APP="sudo pacman"
            ;;
        paru)
            APP="paru"
            ;;
        yay)
            APP="yay"
            ;;
    esac
    if $APP -Q $2 &>> /dev/null ; then
        echo -e "$COK - $2 is already installed."
    else
        # no package found so installing
        echo -e "$CNT - Now installing $2 ..."
        $APP -S --noconfirm $2 &>> $INSTLOG
        # test to make sure package installed
        if $APP -Q $2 &>> /dev/null ; then
            echo -e "\e[1A\e[K$COK - $2 was installed."
        else
            # if this is hit then a package is missing, exit to review log
            echo -e "\e[1A\e[K$CER - $2 install had failed, please check the install.log"
            exit
        fi
    fi
}

remove_software() {
    if $APP -Q $2 &>> /dev/null ; then
        sudo pacman -Rcns $2 --noconfirm &>> $INSTLOG
        echo -e "$COK - $2 removed."
    fi
}

### Install all of the above pacakges ####
read -n1 -rep $'[\e[1;33mACTION\e[0m] - Would you like to install the packages? (y,n) ' INST
if [[ $INST == "Y" || $INST == "y" ]]; then
    # update the DB first
    echo -e "$COK - Updating pacman database..."
    sudo pacman -Syu --noconfirm &>> $INSTLOG
    
    # create all directories
    [ -d $SCRIPTS ] && echo "Directory Exists" || mkdir -p $SCRIPTS &>> $INSTLOG
    [ -d $WALLPAPER ] && echo "Directory Exists" || mkdir -p $WALLPAPER &>> $INSTLOG

    # Copy this config contents
    cp -ri Scripts/* $SCRIPTS &>> $INSTLOG
    cp -ri Wallpaper/* $WALLPAPER &>> $INSTLOG
    
    echo -e "\n$CNT - Stage 1 - Installing main components, this may take a while..."
    for SOFTWR in archlinux-keyring dunst qtile pacman-contrib wget curl xdg-utils xdg-user-dirs thunar zsh zsh-completions zsh-syntax-highlighting
    do
           install_software 'pacman' $SOFTWR 
    done
 
    echo -e "\n$CNT - Stage 2 - Installing additional tools and utilities, this may take a while..."
    for SOFTWR in alacritty htop polkit-gnome python-pip pamixer pavucontrol brightnessctl bluez bluez-utils blueman gvfs thunar-archive-plugin file-roller sddm volumeicon lxappearance
    do
           install_software 'pacman' $SOFTWR 
    done

    echo -e "\n$CNT - Stage 3 - Installing theme and visual related tools and utilities, this may take a while..."
    for SOFTWR in capitaine-cursors papirus-icon-theme ttf-firacode-nerd ttf-jetbrains-mono
    do
           install_software 'pacman' $SOFTWR
    done

    echo -e "\n$CNT - Stage 4 - Installing extra applications and utilities, this may take a while..."
    for SOFTWR in exa htop flatpak fzf glava htop sxiv neofetch neovim starship noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra numlockx xclip xfce4-clipman-plugin xfce4-power-manager
    do
           install_software 'pacman' $SOFTWR 
    done

    echo -e "\n$CNT - Stage 5 - Installing AUR applications, this may take a while..."
    for SOFTWR in rofi fnm-bin picom-jonaburg-fix sddm-sugar-candy-git xmousepasteblock-git zsh-autocomplete-git 
    do
           install_software 'yay' $SOFTWR 
    done

    echo -e "\n$CNT - Stage 6 - Installing Misc AUR applications, this may take a while..."
    for SOFTWR in brave-bin celluloid flameshot makemkv spotify onlyoffice spicetify-cli visual-studio-code-bin zathura zathura-pdf-poppler
    do
           install_software 'yay' $SOFTWR 
    done
    
# Start the bluetooth service
    echo -e "$CNT - Starting the Bluetooth Service..."
    sudo systemctl enable --now bluetooth.service &>> $INSTLOG
    sleep 2
fi

### Copy Config Files ###
read -n1 -rep $'[\e[1;33mACTION\e[0m] - Would you like to copy config files? (y,n) ' CFG
if [[ $CFG == "Y" || $CFG == "y" ]]; then
    echo -e "$CNT - Copying config files..."
    for DIR in alacrity dunst gtk-3.0 nvim picom qtile rofi zsh
    do 
        DIRPATH=~/.config/$DIR
        if [ -d "$DIRPATH" ]; then 
            echo -e "$CAT - Config for $DIR located, backing up."
            mv $DIRPATH $DIRPATH-back &>> $INSTLOG
            echo -e "$COK - Backed up $DIR to $DIRPATH-back."
        fi
        echo -e "$CNT - Copying $DIR config to $DIRPATH."  
    done

    #copy config files
    cp -R $SCRIPT_DIR/config/* ~/.config/ &>> $INSTLOG

    # installing psutil for qtile widgets
    sudo pip install psutil &>> $INSTLOG

    # Copy the SDDM theme
    cd $SCRIPT_DIR
    echo -e "$CNT - Setting up the login screen."
    sudo cp -R sdt /usr/share/sddm/themes/
    sudo chown -R $USER:$USER /usr/share/sddm/themes/sdt
    sudo mkdir /etc/sddm.conf.d
    echo -e "[Theme]\nCurrent=sdt" | sudo tee -a /etc/sddm.conf.d/10-theme.conf &>> $INSTLOG

    #uncomment pacman settings
    sudo sed -i 's/^#ParallelDownloads/ParallelDownloads/' /etc/pacman.conf &>> $INSTLOG
    sudo sed -i 's/^#Color/Color/' /etc/pacman.conf &>> $INSTLOG
    sudo sed -i '/^ParallelDownloads = .*/a ILoveCandy' /etc/pacman.conf &>> $INSTLOG

    #copy zsh core file
    chsh -s $(which zsh)
    cp $SCRIPT_DIR/extras/.zshrc ~/

    #setup the first look and feel as dark
    git clone --depth=1 https://github.com/decaycs/decay-gtk
    cd decay-gtk
    cp -r ./Themes/Dark-decay ~/.themes
    cp -r ./Themes/Decayce ~/.themes

    echo ">> installing spicetify..."
    sudo chmod a+wr /opt/spotify &>> $INSTLOG
    sudo chmod a+wr /opt/spotify/Apps -R &>> $INSTLOG

    cd $SCRIPT_DIR
    git clone --depth=1 https://github.com/decaycs/decay-spicetify.git  &>> $INSTLOG
    test -d $HOME/.config/spicetify/Themes || mkdir -p $HOME/.config/spicetify/Themes  &>> $INSTLOG
    cp -r decay-spicetify/Themes/* ~/.config/spicetify/Themes &>> $INSTLOG
    spicetify config current_theme decayce &>> $INSTLOG
    spicetify apply &>> $INSTLOG
    cd $SCRIPT_DIR
    rm -rf decay-spicetify &>> $INSTLOG

    #move custom .desktop files for rofi
    mkdir -p ~/.local/share/applications
    cp -r $SCRIPT_DIR/extras/*.desktop ~/.local/share/applications &>> $INSTLOG
fi

### Install the starship shell ###
read -n1 -rep $'[\e[1;33mACTION\e[0m] - Would you like to activate the starship shell? (y,n) ' STAR
if [[ $STAR == "Y" || $STAR == "y" ]]; then
    # install the starship shell
    echo -e "$CNT - Hansen Crusher, Engage!"
    echo -e "$CNT - Updating .bashrc..."
    echo -e '\neval "$(starship init bash)"' >> ~/.bashrc
    echo -e "$CNT - copying starship config file to ~/.confg ..."
    cp $SCRIPT_DIR/extras/starship.toml ~/.config/
fi

read -n1 -rep $'[\e[1;33mACTION\e[0m] - Install dev environment(php development)? [y/n] ' response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]
then
    echo -e "\n$CNT - Installing Dev applications, this may take a while..."
    #phpstan removed over gpg key issue
    for SOFTWR in ctags fd github-desktop-bin golangci-lint lua-language-server prettier lazygit stylua
    do
        #First lets see if the package is there
        if paru -Qs $SOFTWR > /dev/null ; then
            echo -e "$COK - $SOFTWR is already installed."
        else
            echo -e "$CNT - Now installing $SOFTWR ..."
            paru -S --noconfirm $SOFTWR &>> $INSTLOG
            if paru -Qs $SOFTWR > /dev/null ; then
                echo -e "$COK - $SOFTWR was installed."
            else
                echo -e "$CER - $SOFTWR install had failed, please check the install.log"
                exit
            fi
        fi
    done
    
    #python libraries
    sudo pip install pynvim black  &>> $INSTLOG

    # not used feel free to uncomment
    # #phpstan -- currently not wotking in the aur
    # wget https://github.com/phpstan/phpstan/releases/download/1.10.14/phpstan.phar
    # sudo mkdir -p /usr/share/webapps/bin
    # sudo cp phpstan.phar /usr/share/webapps/bin/
    # sudo chmod 755 /usr/share/webapps/bin/phpstan.phar
    # sudo ln -s /usr/share/webapps/bin/phpstan.phar /usr/bin/phpstan
    # rm phpstan.phar
    # 

    # LEMP INSTALL
    # #php
    # sudo sed -i 's/^;extension=mysqli/extension=mysqli/' /etc/php/php.ini  &>> $INSTLOG
    # sudo sed -i 's/^;extension=pdo_mysql/extension=pdo_mysql/' /etc/php/php.ini  &>> $INSTLOG

    # #php coding libraries
    # wget -O phpcbf.phar https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar  &>> $INSTLOG
    # chmod a+x phpcbf.phar
    # sudo mv phpcbf.phar /usr/local/bin/phpcbf

    # sudo cp DevOps/info.php /usr/share/nginx/html/
    # sudo cp DevOps/nginx.conf /etc/nginx/
    # sudo ln -s /usr/share/webapps/phpMyAdmin/ /usr/share/nginx/html/
    
    # sudo systemctl enable nginx  &>> $INSTLOG

    # sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
    # sudo systemctl enable mariadb
    # sudo systemctl start mariadb
    # sudo mysql_secure_installation

    # sudo systemctl enable php-fpm
    # sudo systemctl start php-fpm
fi

echo -e "\n$CNT - to fix MakeMKV to the following. \n1. login as root 'su -l'\n2. run the following command 'echo sg > /etc/modules-load.d/sg.conf'"
echo -e "\n$CNT - Reboot to finish installation"
